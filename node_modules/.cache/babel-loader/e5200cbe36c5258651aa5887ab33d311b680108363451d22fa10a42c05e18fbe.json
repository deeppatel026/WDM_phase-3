{"ast":null,"code":"var _jsxFileName = \"/Users/pranavisrungavarapu/giri/src/components/ManageQA.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Addqa from './Addqa';\nimport Editqa from './Editqa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Manageqa() {\n  _s();\n  const [qa, setqa] = useState([]);\n  useEffect(() => {\n    // Fetch the list of qa to populate the list\n    fetch('http://localhost/retrieve-qa.php').then(response => response.json()).then(data => {\n      setqa(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage qa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Addqa, {\n      refreshqa: () => {\n        // Implement a function to refresh the qa list after adding or editing\n        fetch('http://localhost/retrieve-qa.php').then(response => response.json()).then(data => {\n          setqa(data);\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editqa, {\n      qa: qa,\n      refreshqa: () => {\n        // Implement a function to refresh the qa list after adding or editing\n        fetch('http://localhost/retrieve-qa.php').then(response => response.json()).then(data => {\n          setqa(data);\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: qa ? qa.map(qa => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [qa.name, \" - \", qa.email, \" - \", qa.qa]\n      }, qa.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No qa available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Manageqa, \"MXJcp0EISz772ruaEq7PwEr/Lfg=\");\n_c = Manageqa;\nexport default Manageqa;\nvar _c;\n$RefreshReg$(_c, \"Manageqa\");","map":{"version":3,"names":["React","useState","useEffect","Addqa","Editqa","jsxDEV","_jsxDEV","Manageqa","_s","qa","setqa","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","refreshqa","map","name","email","id","_c","$RefreshReg$"],"sources":["/Users/pranavisrungavarapu/giri/src/components/ManageQA.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Addqa from './Addqa';\nimport Editqa from './Editqa';\n\nfunction Manageqa() {\n  const [qa, setqa] = useState([]);\n\n\n  useEffect(() => {\n    // Fetch the list of qa to populate the list\n    fetch('http://localhost/retrieve-qa.php')\n      .then((response) => response.json())\n      .then((data) => {\n        setqa(data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <center><h1>Manage qa</h1></center>\n\n      <Addqa refreshqa={() => {\n        // Implement a function to refresh the qa list after adding or editing\n        fetch('http://localhost/retrieve-qa.php')\n          .then((response) => response.json())\n          .then((data) => {\n            setqa(data);\n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });\n      }} />\n\n      <Editqa qa={qa} refreshqa={() => {\n        // Implement a function to refresh the qa list after adding or editing\n        fetch('http://localhost/retrieve-qa.php')\n          .then((response) => response.json())\n          .then((data) => {\n            setqa(data);\n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });\n      }} />\n\n      {/* Render the list of qa */}\n      <ul>\n  {qa ? (\n    qa.map((qa) => (\n      <li key={qa.id}>\n        {qa.name} - {qa.email} - {qa.qa}\n      </li>\n    ))\n  ) : (\n    <li>No qa available</li>\n  )}\n</ul>\n\n    </div>\n  );\n}\n\nexport default Manageqa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}